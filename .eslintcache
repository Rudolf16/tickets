[{"C:\\Users\\lenin\\Desktop\\tickets\\src\\index.tsx":"1","C:\\Users\\lenin\\Desktop\\tickets\\src\\reportWebVitals.js":"2","C:\\Users\\lenin\\Desktop\\tickets\\src\\App.tsx":"3","C:\\Users\\lenin\\Desktop\\tickets\\src\\components\\Navbar.tsx":"4","C:\\Users\\lenin\\Desktop\\tickets\\src\\components\\Home.tsx":"5","C:\\Users\\lenin\\Desktop\\tickets\\src\\components\\AboutTicket.tsx":"6","C:\\Users\\lenin\\Desktop\\tickets\\src\\components\\Title.tsx":"7","C:\\Users\\lenin\\Desktop\\tickets\\src\\components\\Userticket.tsx":"8"},{"size":896,"mtime":1611680747267,"results":"9","hashOfConfig":"10"},{"size":375,"mtime":1611597416095,"results":"11","hashOfConfig":"10"},{"size":620,"mtime":1611690233262,"results":"12","hashOfConfig":"10"},{"size":1053,"mtime":1611682698077,"results":"13","hashOfConfig":"10"},{"size":155,"mtime":1611679185082,"results":"14","hashOfConfig":"10"},{"size":3272,"mtime":1611682687452,"results":"15","hashOfConfig":"10"},{"size":249,"mtime":1611679185082,"results":"16","hashOfConfig":"10"},{"size":860,"mtime":1611682622694,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"60alga",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},"C:\\Users\\lenin\\Desktop\\tickets\\src\\index.tsx",[],["39","40"],"C:\\Users\\lenin\\Desktop\\tickets\\src\\reportWebVitals.js",[],["41","42"],"C:\\Users\\lenin\\Desktop\\tickets\\src\\App.tsx",[],"C:\\Users\\lenin\\Desktop\\tickets\\src\\components\\Navbar.tsx",["43"],"import React,{useState,useEffect} from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport {UserTicket}  from './Userticket'\r\nimport {Ticket} from \"../ts/ticket\"\r\n\r\n\r\n\r\nconst Navbar=()=>{\r\n    const state = useSelector((state:Ticket[])=>state)\r\n    \r\n    \r\n    const[currentTickets,setCurrentTickets]=useState(state);\r\n    const[seacrhTickets,setSeacrhTickets]=useState(state);\r\n    const[ticketName,setTicketName]=useState<string>('')\r\n\r\n    useEffect(()=>{\r\n        setSeacrhTickets(currentTickets.filter((el)=>el.asset.name.toLowerCase().includes(ticketName.trim().toLowerCase())))\r\n\r\n    },[currentTickets,ticketName])\r\n\r\n    return(\r\n        <nav className='tickets-navigate'>\r\n            <input className='search-field' type='text' value={ticketName} onChange={(e)=>setTicketName(e.target.value)}/>\r\n            <ul className='tickets-list'>\r\n            {seacrhTickets.map(ticket=>{\r\n                return(<UserTicket  ticket={ticket}/>)\r\n            })}\r\n            </ul>\r\n        </nav>\r\n    )\r\n             \r\n}\r\n\r\nexport default Navbar","C:\\Users\\lenin\\Desktop\\tickets\\src\\components\\Home.tsx",[],"C:\\Users\\lenin\\Desktop\\tickets\\src\\components\\AboutTicket.tsx",["44","45","46"],"import React ,{useEffect} from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport {Ticket} from \"../ts/ticket\"\r\n\r\nconst AboutTicket= (props:any) => {\r\n        let tickets=useSelector((state:Ticket[])=>state);\r\n        let ticket=tickets.find(ticket=>ticket.ticketId==props.match.params.id)!\r\n        const date=new Date(ticket.lastUpdatedTime).toLocaleTimeString([], {year: 'numeric', month: 'numeric', day: 'numeric', hour: '2-digit', minute: '2-digit'});\r\n        const date_2=new Date(ticket.reportedTime).toLocaleTimeString([], {year: 'numeric', month: 'numeric', day: 'numeric', hour: '2-digit', minute: '2-digit'}); \r\n        return (\r\n            <div className='ticket-page'>\r\n                <header className='ticket-page-header'>\r\n                    <div>\r\n                        <span>TICKET NO. </span>\r\n                        <span>{ticket.number}</span>\r\n                    </div>\r\n                    <div>\r\n                        <span>Last update </span>\r\n                        <span>{date}</span>\r\n                    </div>\r\n                </header>\r\n                <section className='about-ticket'>\r\n                    <h4 className='about-ticket__hat'>Owner</h4>\r\n                    <div className=\"about-ticket_main-content\">\r\n                        <img className='ticket-icon' src={ticket.owner.avatar}></img>\r\n                        <div>\r\n                            <p><span>{ticket.owner.firstName}</span><span>{ticket.owner.lastName}</span></p>\r\n                            <p>{ticket.owner.specialities}</p>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                <section className='about-ticket'>\r\n                    <h4 className='about-ticket__hat'>Details</h4>\r\n                    <div className=\"about-ticket_main-content\">\r\n                        <div>\r\n                            <p>Reported</p>\r\n                            <p>{date_2}</p>\r\n                        </div>\r\n                        <div>\r\n                            <p>Status</p>\r\n                            <p>{ticket.status}</p>\r\n                        </div>\r\n                        <div>\r\n                            <p>Description</p>\r\n                            <p>{ticket.description}</p>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </section>\r\n                <section className='about-ticket'>\r\n                    <h4 className='about-ticket__hat'>Asset</h4>\r\n                    <div className=\"about-ticket_main-content\">\r\n                        <div>\r\n                            <p>Name</p>\r\n                            <p>{ticket.asset.name}</p>\r\n                        </div>\r\n                        <div>\r\n                            <p>GeoCode</p>\r\n                            <p>{ticket.asset.geoCode}</p>\r\n                        </div>\r\n                        <div>\r\n                            <p>Location</p>\r\n                            <div>{ticket.asset.kmFrom}</div>\r\n                            <div>{ticket.asset.kmTo}</div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                \r\n            </div>\r\n        )\r\n}\r\n\r\nexport default AboutTicket;\r\n","C:\\Users\\lenin\\Desktop\\tickets\\src\\components\\Title.tsx",[],"C:\\Users\\lenin\\Desktop\\tickets\\src\\components\\Userticket.tsx",["47"],"import React  from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport {Ticket} from \"../ts/ticket\"\r\ntype Props ={\r\n    ticket:Ticket;\r\n}\r\n\r\nexport const UserTicket:React.FC<Props>=({ticket}) => {\r\n    const date=new Date(ticket.reportedTime).toLocaleTimeString([], {year: 'numeric', month: 'numeric', day: 'numeric', hour: '2-digit', minute: '2-digit'});\r\n    return (\r\n        <Link to={'/'+ticket.ticketId} >\r\n            <li className='ticket-list_item' id={String(ticket.ticketId)}>\r\n                <img className='ticket-list_icon' src={ticket.owner.avatar}></img>\r\n                <span className=\"ticket-list_reported\">{date}</span>\r\n                <span className=\"ticket-list_name\">{ticket.asset.name}</span>\r\n                <span className=\"ticket-list_status\">{ticket.status}</span>\r\n            </li>\r\n        </Link> \r\n        \r\n    )\r\n}\r\n",{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":12,"column":26,"nodeType":"54","messageId":"55","endLine":12,"endColumn":43},{"ruleId":"52","severity":1,"message":"56","line":1,"column":16,"nodeType":"54","messageId":"55","endLine":1,"endColumn":25},{"ruleId":"57","severity":1,"message":"58","line":7,"column":56,"nodeType":"59","messageId":"60","endLine":7,"endColumn":58},{"ruleId":"61","severity":1,"message":"62","line":25,"column":25,"nodeType":"63","endLine":25,"endColumn":80},{"ruleId":"61","severity":1,"message":"62","line":13,"column":17,"nodeType":"63","endLine":13,"endColumn":77},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"@typescript-eslint/no-unused-vars","'setCurrentTickets' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]