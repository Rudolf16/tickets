[{"/home/user/Desktop/tickets/src/index.js":"1","/home/user/Desktop/tickets/src/reportWebVitals.js":"2","/home/user/Desktop/tickets/src/App.js":"3","/home/user/Desktop/tickets/src/components/Navbar.js":"4","/home/user/Desktop/tickets/src/components/Userticket.js":"5","/home/user/Desktop/tickets/src/components/Home.js":"6","/home/user/Desktop/tickets/src/components/AboutTicket.js":"7","/home/user/Desktop/tickets/src/components/Title.js":"8"},{"size":787,"mtime":1611568558213,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1611561201909,"results":"11","hashOfConfig":"10"},{"size":592,"mtime":1611581672455,"results":"12","hashOfConfig":"10"},{"size":1015,"mtime":1611569237907,"results":"13","hashOfConfig":"10"},{"size":495,"mtime":1611581653416,"results":"14","hashOfConfig":"10"},{"size":134,"mtime":1611563954895,"results":"15","hashOfConfig":"10"},{"size":2660,"mtime":1611571433039,"results":"16","hashOfConfig":"10"},{"size":239,"mtime":1611566373172,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"p1kc8p",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/home/user/Desktop/tickets/src/index.js",[],["37","38"],"/home/user/Desktop/tickets/src/reportWebVitals.js",[],"/home/user/Desktop/tickets/src/App.js",[],"/home/user/Desktop/tickets/src/components/Navbar.js",["39"],"import React,{useState,useEffect} from 'react'\nimport {connect} from 'react-redux'\nimport { UserTicket } from './Userticket'\n\n\nconst Navbar=({tickets})=>{\n    const[currentTickets,setCurrentTickets]=useState(tickets);\n    const[seacrhTickets,setSeacrhTickets]=useState(tickets);\n    const[ticketName,setTicketName]=useState('')\n\n    useEffect(()=>{\n        setSeacrhTickets(currentTickets.filter(el=>el.asset.name.toLowerCase().includes(ticketName.trim().toLowerCase())))\n\n    },[currentTickets,ticketName])\n\n    return(\n        <nav className='tickets-navigate'>\n            <input className='search-field' type='text' value={ticketName} onChange={(e)=>setTicketName(e.target.value)}/>\n            <ul className='tickets-list'>\n            {seacrhTickets.map(ticket=>{\n                return(<UserTicket  ticket={ticket}/>)\n            })}\n            </ul>\n        </nav>\n    )\n             \n}\n\nconst mapStateToProps=(state)=>{\n    return{tickets:state};\n  \n  }\n  \nexport default connect(mapStateToProps)(Navbar);","/home/user/Desktop/tickets/src/components/Userticket.js",["40"],"/home/user/Desktop/tickets/src/components/Home.js",[],"/home/user/Desktop/tickets/src/components/AboutTicket.js",["41","42","43"],"import React ,{useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nconst AboutTicket = ({ticket}) => {\n    console.log(ticket)\n    useEffect(() => {\n        console.log(ticket)\n    }, [])\n    \n    return (\n        <div className='ticket-page'>\n            <header className='ticket-page-header'>\n                <div>\n                    <span>TICKET NO. </span>\n                    <span>{ticket.number}</span>\n                </div>\n                <div>\n                    <span>Last update </span>\n                    <span>{ticket.lastUpdatedTime}</span>\n                </div>\n            </header>\n            <section className='about-ticket'>\n                <h4 className='about-ticket__hat'>Owner</h4>\n                <div>\n                    <img className='ticket-icon' src={ticket.owner.avatar}></img>\n                    <div>\n                        <p><span>{ticket.owner.firstName}</span><span>{ticket.owner.lastName}</span></p>\n                        <p>{ticket.owner.specialities}</p>\n                    </div>\n                </div>\n            </section>\n            <section className='about-ticket'>\n                <h4 className='about-ticket__hat'>Details</h4>\n                <div>\n                    <div>\n                        <p>Reported</p>\n                        <p>{ticket.reportedTime}</p>\n                    </div>\n                    <div>\n                        <p>Status</p>\n                        <p>{ticket.status}</p>\n                    </div>\n                    <div>\n                        <p>Description</p>\n                        <p>{ticket.description}</p>\n                    </div>\n                    \n                </div>\n            </section>\n            <section className='about-ticket'>\n                <h4 className='about-ticket__hat'>Asset</h4>\n                <div>\n                    <div>\n                        <p>Name</p>\n                        <p>{ticket.asset.name}</p>\n                    </div>\n                    <div>\n                        <p>GeoCode</p>\n                        <p>{ticket.asset.geoCode}</p>\n                    </div>\n                    <div>\n                        <p>Location</p>\n                        <div>{ticket.asset.kmFrom}</div>\n                        <div>{ticket.asset.kmTo}</div>\n                    </div>\n                </div>\n            </section>\n            \n        </div>\n    )\n}\n\nconst mapStateToProps=(state,oldstate)=>{\n    let id=state.find(ticket=>ticket.ticketId==oldstate.match.params.id)\n    return{ticket:id};\n  \n  }\n  \n\n// export default AboutTicket; \nexport default connect(mapStateToProps)(AboutTicket);\n","/home/user/Desktop/tickets/src/components/Title.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":7,"column":26,"nodeType":"50","messageId":"51","endLine":7,"endColumn":43},{"ruleId":"52","severity":1,"message":"53","line":8,"column":17,"nodeType":"54","endLine":8,"endColumn":72},{"ruleId":"55","severity":1,"message":"56","line":8,"column":8,"nodeType":"57","endLine":8,"endColumn":10,"suggestions":"58"},{"ruleId":"52","severity":1,"message":"53","line":25,"column":21,"nodeType":"54","endLine":25,"endColumn":76},{"ruleId":"59","severity":1,"message":"60","line":74,"column":46,"nodeType":"61","messageId":"62","endLine":74,"endColumn":48},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'setCurrentTickets' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'ticket'. Either include it or remove the dependency array.","ArrayExpression",["65"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"66","fix":"67"},"Update the dependencies array to be: [ticket]",{"range":"68","text":"69"},[193,195],"[ticket]"]