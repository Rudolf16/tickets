[{"/home/user/Desktop/Tickets/tickets/src/index.js":"1","/home/user/Desktop/Tickets/tickets/src/App.js":"2","/home/user/Desktop/Tickets/tickets/src/reportWebVitals.js":"3","/home/user/Desktop/Tickets/tickets/src/components/Home.js":"4","/home/user/Desktop/Tickets/tickets/src/components/Navbar.js":"5","/home/user/Desktop/Tickets/tickets/src/components/Title.js":"6","/home/user/Desktop/Tickets/tickets/src/components/AboutTicket.js":"7","/home/user/Desktop/Tickets/tickets/src/components/Userticket.js":"8"},{"size":815,"mtime":1611644189171,"results":"9","hashOfConfig":"10"},{"size":592,"mtime":1611644189171,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1611644189171,"results":"12","hashOfConfig":"10"},{"size":134,"mtime":1611644189171,"results":"13","hashOfConfig":"10"},{"size":1015,"mtime":1611644189171,"results":"14","hashOfConfig":"10"},{"size":239,"mtime":1611644189171,"results":"15","hashOfConfig":"10"},{"size":2774,"mtime":1611644189171,"results":"16","hashOfConfig":"10"},{"size":603,"mtime":1611644189171,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"z98ths",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},"/home/user/Desktop/Tickets/tickets/src/index.js",[],["38","39"],"/home/user/Desktop/Tickets/tickets/src/App.js",[],"/home/user/Desktop/Tickets/tickets/src/reportWebVitals.js",[],"/home/user/Desktop/Tickets/tickets/src/components/Home.js",[],"/home/user/Desktop/Tickets/tickets/src/components/Navbar.js",["40"],"import React,{useState,useEffect} from 'react'\nimport {connect} from 'react-redux'\nimport { UserTicket } from './Userticket'\n\n\nconst Navbar=({tickets})=>{\n    const[currentTickets,setCurrentTickets]=useState(tickets);\n    const[seacrhTickets,setSeacrhTickets]=useState(tickets);\n    const[ticketName,setTicketName]=useState('')\n\n    useEffect(()=>{\n        setSeacrhTickets(currentTickets.filter(el=>el.asset.name.toLowerCase().includes(ticketName.trim().toLowerCase())))\n\n    },[currentTickets,ticketName])\n\n    return(\n        <nav className='tickets-navigate'>\n            <input className='search-field' type='text' value={ticketName} onChange={(e)=>setTicketName(e.target.value)}/>\n            <ul className='tickets-list'>\n            {seacrhTickets.map(ticket=>{\n                return(<UserTicket  ticket={ticket}/>)\n            })}\n            </ul>\n        </nav>\n    )\n             \n}\n\nconst mapStateToProps=(state)=>{\n    return{tickets:state};\n  \n  }\n  \nexport default connect(mapStateToProps)(Navbar);","/home/user/Desktop/Tickets/tickets/src/components/Title.js",[],"/home/user/Desktop/Tickets/tickets/src/components/AboutTicket.js",["41","42","43"],"import React ,{useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nconst AboutTicket = ({ticket}) => {\n    console.log(ticket)\n    useEffect(() => {\n        console.log(ticket)\n    }, [])\n    \n    return (\n        <div className='ticket-page'>\n            <header className='ticket-page-header'>\n                <div>\n                    <span>TICKET NO. </span>\n                    <span>{ticket.number}</span>\n                </div>\n                <div>\n                    <span>Last update </span>\n                    <span>{ticket.lastUpdatedTime}</span>\n                </div>\n            </header>\n            <section className='about-ticket'>\n                <h4 className='about-ticket__hat'>Owner</h4>\n                <div className=\"about-ticket_main-content\">\n                    <img className='ticket-icon' src={ticket.owner.avatar}></img>\n                    <div>\n                        <p><span>{ticket.owner.firstName}</span><span>{ticket.owner.lastName}</span></p>\n                        <p>{ticket.owner.specialities}</p>\n                    </div>\n                </div>\n            </section>\n            <section className='about-ticket'>\n                <h4 className='about-ticket__hat'>Details</h4>\n                <div className=\"about-ticket_main-content\">\n                    <div>\n                        <p>Reported</p>\n                        <p>{ticket.reportedTime}</p>\n                    </div>\n                    <div>\n                        <p>Status</p>\n                        <p>{ticket.status}</p>\n                    </div>\n                    <div>\n                        <p>Description</p>\n                        <p>{ticket.description}</p>\n                    </div>\n                    \n                </div>\n            </section>\n            <section className='about-ticket'>\n                <h4 className='about-ticket__hat'>Asset</h4>\n                <div className=\"about-ticket_main-content\">\n                    <div>\n                        <p>Name</p>\n                        <p>{ticket.asset.name}</p>\n                    </div>\n                    <div>\n                        <p>GeoCode</p>\n                        <p>{ticket.asset.geoCode}</p>\n                    </div>\n                    <div>\n                        <p>Location</p>\n                        <div>{ticket.asset.kmFrom}</div>\n                        <div>{ticket.asset.kmTo}</div>\n                    </div>\n                </div>\n            </section>\n            \n        </div>\n    )\n}\n\nconst mapStateToProps=(state,oldstate)=>{\n    let id=state.find(ticket=>ticket.ticketId==oldstate.match.params.id)\n    return{ticket:id};\n  \n  }\n  \n\n// export default AboutTicket; \nexport default connect(mapStateToProps)(AboutTicket);\n","/home/user/Desktop/Tickets/tickets/src/components/Userticket.js",["44"],"import React  from 'react';\nimport {Link} from 'react-router-dom'\n\nexport const UserTicket = ({ticket}) => {\n    return (\n        <Link to={'/'+ticket.ticketId} >\n            <li className='ticket-list_item' id={ticket.ticketId}>\n                <img className='ticket-list_icon' src={ticket.owner.avatar}></img>\n                <span className=\"ticket-list_reported\">{ticket.reportedTime}</span>\n                <span className=\"ticket-list_name\">{ticket.asset.name}</span>\n                <span className=\"ticket-list_status\">{ticket.status}</span>\n            </li>\n        </Link> \n        \n    )\n}\n",{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":7,"column":26,"nodeType":"51","messageId":"52","endLine":7,"endColumn":43},{"ruleId":"53","severity":1,"message":"54","line":8,"column":8,"nodeType":"55","endLine":8,"endColumn":10,"suggestions":"56"},{"ruleId":"57","severity":1,"message":"58","line":25,"column":21,"nodeType":"59","endLine":25,"endColumn":76},{"ruleId":"60","severity":1,"message":"61","line":74,"column":46,"nodeType":"62","messageId":"63","endLine":74,"endColumn":48},{"ruleId":"57","severity":1,"message":"58","line":8,"column":17,"nodeType":"59","endLine":8,"endColumn":77},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'setCurrentTickets' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'ticket'. Either include it or remove the dependency array.","ArrayExpression",["66"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"67","fix":"68"},"Update the dependencies array to be: [ticket]",{"range":"69","text":"70"},[193,195],"[ticket]"]